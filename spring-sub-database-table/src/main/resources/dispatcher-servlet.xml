<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">
  <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
  <!--<context:annotation-config/>-->
  <mvc:annotation-driven/>
  <context:annotation-config/>
  <context:component-scan base-package="com.study.database.table.controller"/>
  <!--<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>-->
  <!--<mvc:resources location="/WEB-INF/image/" mapping="/image/**"/>-->
  <!--<mvc:resources location="/WEB-INF/upload/" mapping="/upload/**"/>-->


  <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
    <property name="prefix" value="/WEB-INF/views/"/>
    <property name="suffix" value=".jsp"/>
  </bean>

  <!-- ajax -->
  <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
    id="jsonHttpMessageConverter">
    <property name="supportedMediaTypes">
      <list>
        <value>application/json;charset=UTF-8</value>
      </list>
    </property>
  </bean>
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    <property name="messageConverters">
      <list>
        <ref bean="jsonHttpMessageConverter"/>
      </list>
    </property>
  </bean>

  <!--<mvc:interceptors>-->
    <!--&lt;!&ndash;  使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求   &ndash;&gt;-->
    <!--&lt;!&ndash; <bean class="com.bybo.aca.web.interceptor.Login"/> &ndash;&gt;-->
    <!--<mvc:interceptor>-->
      <!--&lt;!&ndash; 进行拦截：/**表示拦截所有controller &ndash;&gt;-->
      <!--<mvc:mapping path="/**" />-->
       <!--&lt;!&ndash; 不进行拦截 &ndash;&gt;-->
      <!--<mvc:exclude-mapping path="/js/*"/>-->
      <!--<mvc:exclude-mapping path="/image/*"/>-->
      <!--<mvc:exclude-mapping path="/upload/*"/>-->
      <!--<mvc:exclude-mapping path="/login.jsp"/>-->
      <!--<mvc:exclude-mapping path="/index.jsp"/>-->
      <!--<mvc:exclude-mapping path="/findBookById"/>-->
      <!--<bean class="com.study.spring.interceptor.UserAccessInterceptor"/>-->
    <!--</mvc:interceptor>-->
  <!--</mvc:interceptors>-->

</beans>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

  <!-- mybatis 的一级缓存存在于sqlSession的生命周期中，在同一个sqlSession中查询时，mybatis会把执行的方法和参数通过算法生成的缓存和键值，
  并存入map中，如果同一个sqlSession中执行的方法和参数完全一致，就回返回缓存中的对象，可通过在语句中设置 flushCache=true 关闭。
   注：任何的 insert 、update、 delete 操作都会清空一级缓存-->

  <!-- 属性 -->
  <!--<properties/>-->

  <!-- setting -->
  <settings>
    <!-- 使用 log4j2  -->
    <setting name="logImpl" value="LOG4J2"/>
    <!-- 若配置为 false 在sqlmap 中即使开启也不会生效
     二级缓存有如下特征：
      1、所有 select 语句都会被缓存
      2、 insert、update、delete 语句会刷新缓存
     -->
    <setting name="cacheEnabled" value="true"/>
    <setting name="aggressiveLazyLoading" value="false"/>

    <!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。 -->
    <setting name="lazyLoadingEnabled" value="true"/>
    <!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。 -->
    <setting name="aggressiveLazyLoading" value="true"/>
    <!-- 是否允许单条sql 返回多个数据集  (取决于驱动的兼容性) default:true -->
    <setting name="multipleResultSetsEnabled" value="true"/>
    <!-- 是否可以使用列的别名 (取决于驱动的兼容性) default:true -->
    <setting name="useColumnLabel" value="true"/>
    <!-- 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。  default:false  -->
    <setting name="useGeneratedKeys" value="false"/>
    <!-- 指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射PARTIAL:部分  FULL:全部  -->
    <!--<setting name="autoMappingBehavior" value="PARTIAL"/>-->
    <!-- 这是默认的执行类型  （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新）  -->
    <setting name="defaultExecutorType" value="SIMPLE"/>
    <!-- 使用驼峰命名法转换字段。 -->
    <setting name="mapUnderscoreToCamelCase" value="true"/>
    <!-- 设置本地缓存范围 session:就会有数据的共享  statement:语句范围 (这样就不会有数据的共享 ) defalut:session -->
    <setting name="localCacheScope" value="SESSION"/>
    <!-- 设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER，插入空值时不需要指定类型 -->
    <!--<setting name="jdbcTypeForNull" value="NULL"/>-->

  </settings>

  <typeAliases>
    <!--<typeAlias alias="user" type="com.po.User"></typeAlias>-->
    <!--<typeAlias alias="fruit" type="com.po.Fruit"/>-->
    <!-- 也可以简化为这种方式 -->
    <package name="com.study.mybatis.entity"/>
  </typeAliases>

  <!-- 配置枚举类型 -->
  <typeHandlers>
    <typeHandler handler="org.apache.ibatis.type.EnumOrdinalTypeHandler" javaType="com.study.mybatis.entity.Sex"/>
  </typeHandlers>

  <!-- 对象工厂 -->
  <!--<objectFactory></objectFactory>-->

  <!-- 插件 -->
  <plugins>
    <plugin interceptor="com.github.pagehelper.PageInterceptor">
      <!-- 4.0.0以后版本可以不设置该参数 -->
      <!--<property name="dialect" value="mysql"/>-->
      <!-- 该参数默认为false -->
      <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
      <!-- 和startPage中的pageNum效果一样-->
      <property name="offsetAsPageNum" value="true"/>
      <!-- 该参数默认为false -->
      <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
      <property name="rowBoundsWithCount" value="true"/>
      <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
      <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
      <property name="pageSizeZero" value="true"/>
      <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
      <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
      <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
      <property name="reasonable" value="false"/>
      <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
      <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
      <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
      <!-- 不理解该含义的前提下，不要随便复制该配置 -->
      <!--<property name="params" value="pageNum=pageHelperStart;pageSize=pageHelperRows;"/>-->
      <!-- 支持通过Mapper接口参数来传递分页参数 -->
      <property name="supportMethodsArguments" value="false"/>
      <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
      <property name="returnPageInfo" value="none"/>


    </plugin>
  </plugins>

  <environments default="development">
    <environment id="development">
      <transactionManager type="JDBC">
        <property name="autoCommit" value="false"/>
      </transactionManager>
      <dataSource type="POOLED">
        <property name="driver" value="com.mysql.jdbc.Driver"/>
        <property name="url"
          value="jdbc:mysql://localhost:3306/aaa?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false"/>
        <property name="username" value="liu"/>
        <property name="password" value="123456"/>
      </dataSource>
    </environment>
  </environments>


  <mappers>
    <!--<mapper resource="classpath:mapper/*.xml"/>-->
    <mapper resource="mapper/fruitMapper.xml"/>
    <mapper resource="mapper/lectureMapper.xml"/>
    <mapper resource="mapper/studentLectureMapper.xml"/>
    <mapper resource="mapper/studentMapper.xml"/>
    <mapper resource="mapper/studentSelfCardMapper.xml"/>
    <mapper resource="mapper/userMapper.xml"/>


    <!-- 需要将mapper接口类名和mapper.xml映射文件名称保持一致且在同一个目录中，要使用的是mapper代理 -->
    <!--<package name="com.study.mybatis.mapper"/>-->
  </mappers>

</configuration>